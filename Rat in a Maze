#include <bits/stdc++.h>
void helper(vector<vector<int>> &ans, vector<vector<int>> &matrix, int row, int col, vector<vector<int>> &maze, int n) {
  if(row == n - 1 and col == n - 1) {
    ans.push_back({});
    for(int i = 0; i < n; i++) {
      for(int j = 0; j < n; j++) {
        ans.back().push_back(matrix[i][j]);
      }
    }
    return;
  }
  vector<vector<int>> movements = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};
  for(vector<int> &v: movements) {
    int x = row + v[1], y = col + v[0];
    if(x >= 0 and x < n and y >= 0 and y < n and maze[x][y] == 1 and matrix[x][y] == 0) {
      matrix[x][y] = 1;
      helper(ans, matrix, x, y, maze, n);
      matrix[x][y] = 0;
    }
  }
}
vector<vector<int> > ratInAMaze(vector<vector<int>> &maze, int n){
    vector<vector<int>> ans, matrix(n, vector<int>(n, 0));
    if(maze[0][0]) {
      matrix[0][0] = 1;
      helper(ans, matrix, 0, 0, maze, n);
    }
    return ans;
}
