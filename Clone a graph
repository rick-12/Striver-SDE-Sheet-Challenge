#include <bits/stdc++.h> 
/***************************************************************************

	Class for graph node is as follows:

	class graphNode
	{
		public:
    		int data;
    	vector<graphNode *> neighbours;
    	graphNode()
    	{
        	data = 0;
        	neighbours = vector<graphNode *>();
    	}

    	graphNode(int val)
    	{
        	data = val;
        	neighbours = vector<graphNode *>();
    	}

    	graphNode(int val, vector<graphNode *> neighbours)
    	{
        	data = val;
        	this->neighbours = neighbours;
    	}
	};

******************************************************************************/
graphNode* clone(graphNode* node, unordered_map<graphNode*, graphNode*>& newNode) {
	if(newNode.find(node) != newNode.end()) return newNode[node];
	graphNode* copyNode = new graphNode(node->data);
	newNode[node] = copyNode;
	for(graphNode* child: node->neighbours) {
		graphNode* cloneChild = clone(child, newNode);
		copyNode->neighbours.push_back(cloneChild);
	}
	return copyNode;
}
graphNode *cloneGraph(graphNode *node)
{
	unordered_map<graphNode*, graphNode*> newNode;
	return clone(node, newNode);
}
