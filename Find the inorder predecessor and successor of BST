#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    template <typename T>

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left)
            {
                delete left;
            }
            if (right)
            {
                delete right;
            }
        }
    };

*************************************************************/
int successor(BinaryTreeNode<int>* root, int key) {
    int ans = -1;
    while(root) {
        if(root->data <= key) {
            root = root->right;
        }
        else {
            ans = root->data;
            root = root->left;
        }
    }
    return ans;
}
int predecessor(BinaryTreeNode<int>* root, int key) {
    int ans = -1;
    while(root) {
        if(root->data >= key) {
            root = root->left;
        }
        else {
            ans = root->data;
            root = root->right;
        }
    }
    return ans;
}
pair<int,int> predecessorSuccessor(BinaryTreeNode<int>* root, int key)
{
    int first = predecessor(root, key);
    int second = successor(root, key);
    return make_pair(first, second);
}
