#include <bits/stdc++.h> 
vector<int> BFS(int vertex, vector<pair<int, int>> edges)
{
    vector<vector<int>> adj(vertex, vector<int>());
    for(auto& it: edges) {
        adj[it.first].push_back(it.second);
        adj[it.second].push_back(it.first);
    }
    vector<bool> vis(vertex, false);
    vector<int> ans;
    for(int i = 0; i < vertex; i++) {
        if(vis[i]) continue;
        queue<int> q;
        vis[i] = true;
        q.push(i);
        while(!q.empty()) {
            int node = q.front();
            ans.push_back(node);
            q.pop();
            set<int> s;
            for(int child: adj[node]) {
                if(vis[child]) continue;
                vis[child] = true;
                s.insert(child);
            }
            for(int child: s) {
                q.push(child);
            }
        }
    }
    return ans;
}
