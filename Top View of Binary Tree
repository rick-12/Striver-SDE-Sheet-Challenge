#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure:

    template <typename T>
    class TreeNode {
       public:
        T val;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T val) {
            this->val = val;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

vector<int> getTopView(TreeNode<int> *root) {
    // Write your code here.
    vector<int> ans;
    queue<pair<int, TreeNode<int>*>> q;
    if(root)
        q.push(make_pair(0, root));
    map<int, int> mpp;
    while(!q.empty()) {
        int n = q.size();
        for(int i = 0; i < n; i++) {
            auto curr = q.front();
            q.pop();
            int column = curr.first;
            TreeNode<int> *node = curr.second;
            if(mpp.find(column) == mpp.end())
                mpp[column] = node->val;
            if(node->left)
                q.push(make_pair(column - 1, node->left));
            if(node->right)
                q.push(make_pair(column + 1, node->right));
        }
    }
    for(auto p: mpp) {
        ans.push_back(p.second);
    }
    return ans;
}
