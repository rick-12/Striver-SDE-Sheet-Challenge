#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

class BSTiterator
{
    stack<TreeNode<int>*> st;
    TreeNode<int> *root;
    void pushLeftNodes() {
        while(this->root) {
            st.push(this->root);
            this->root = this->root->left;
        }
    }
public:
    BSTiterator(TreeNode<int> *root)
    {
        this->root = root;
    }

    int next()
    {
        if(this->root) {
            pushLeftNodes();
        }
        this->root = st.top();
        st.pop();
        int ans = this->root->data;
        this->root = this->root->right;
        return ans;
    }

    bool hasNext()
    {
        return ((this->root != NULL) or (!st.empty()));
    }
};


/*
    Your BSTIterator object will be instantiated and called as such:
    BSTIterator iterator(root);
    while(iterator.hasNext())
    {
       print(iterator.next());
    }
*/
