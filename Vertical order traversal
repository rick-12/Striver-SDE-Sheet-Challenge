#include <bits/stdc++.h> 
/************************************************************

Following is the Binary Tree node class
    
template <typename T = int>
class TreeNode
{
public:
    T data;
    TreeNode<T> *left;
    TreeNode<T> *right;

    TreeNode(T val)
    {
        this->data = val;
        left = NULL;
        right = NULL;
    }

    ~TreeNode()
    {
        if (left != NULL)
        {
            delete left;
        }
        if (right != NULL)
        {
            delete right;
        }
    }
};

************************************************************/
vector<int> verticalOrderTraversal(TreeNode<int> *root)
{
    vector<int> ans;
    queue<pair<int, TreeNode<int>*>> q;
    if(root)
        q.push(make_pair(0, root));
    map<int, vector<int>> mpp;
    while(!q.empty()) {
        auto curr = q.front();
        int column = curr.first;
        TreeNode<int>* node = curr.second;
        mpp[column].push_back(node->data);
        q.pop();
        if(node->left)
            q.push(make_pair(column - 1, node->left));
        if(node->right)
            q.push(make_pair(column + 1, node->right));
    }
    for(auto p: mpp) {
        for(auto v: p.second) {
            ans.push_back(v);
        }
    }
    return ans;
}
