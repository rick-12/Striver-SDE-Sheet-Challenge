class Solution {
    void helper(vector<vector<int>>& ans, vector<int>& v, int index, int n, vector<int>& candidates, int target) {
        if(index == n) {
            if(target == 0) {
                ans.push_back(v);
            }
            return;
        }
        if(target >= candidates[index]) {
            v.push_back(candidates[index]);
            helper(ans, v, index, n, candidates, target - candidates[index]);
            v.pop_back();
        }
        helper(ans, v, index + 1, n, candidates, target);
    }
public:
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        int n = candidates.size();
        vector<vector<int>> ans;
        vector<int> v;
        helper(ans, v, 0, n, candidates, target);
        return ans;
    }
};
