#include <bits/stdc++.h>
bool isPalindrome(string &s, int low, int high) {
    while(low < high) {
        if(s[low] != s[high]) {
            return false;
        }
        low++;
        high--;
    }
    return true;
}
void helper(vector<vector<string>> &ans, vector<string> &v, string &s, int index, int n) {
    if(index == n) {
        ans.push_back(v);
        return;
    }
    string str = "";
    for(int i = index; i < n; i++) {
        str.push_back(s[i]);
        if(isPalindrome(s, index, i)) {
            v.push_back(str);
            helper(ans, v, s, i + 1, n);
            v.pop_back();
        }
    }
}
vector<vector<string>> partition(string &s) 
{
    vector<vector<string>> ans;
    vector<string> v;
    int n = s.length();
    helper(ans, v, s, 0, n);
    return ans;
}
